/**
* Make the field a flex-container, reverse the order so label is on top.
*/

.field {
  display: flex;
  flex-flow: column-reverse;
  /* margin-bottom: 1em; */
}
/**
  * Add a transition to the label and input.
  * I'm not even sure that touch-action: manipulation works on
  * inputs, but hey, it's new and cool and could remove the 
  * pesky delay.
  */
label,
input {
  transition: all 0.2s;
  touch-action: manipulation;
}

input {
  font-size: 20px;
  border: 1.5px solid black;
  font-family: inherit;
  -webkit-appearance: none;
  padding: 0;
  padding: 6px 10px;
  cursor: text;
  color: #1d1d1d;
  background-color: #f2f5f9;
  margin: 0 auto;
  margin-bottom: 0.5em;
  width: 250px;
}

.first-field {
  border-radius: 12px 12px 0 0;
}
.last-field {
  border-radius: 0 0 12px 12px;
  margin-bottom: 10px;
}

input:focus {
  outline: 0;
  border-bottom: 1.5px solid black;
}

label {
  letter-spacing: 0.05em;
  font-size: 15px;
  margin-left: 35px;
}
/**
  * Translate down and scale the label up to cover the placeholder,
  * when following an input (with placeholder-shown support).
  * Also make sure the label is only on one row, at max 2/3rds of the
  * fieldâ€”to make sure it scales properly and doesn't wrap.
  */
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}
/**
  * By default, the placeholder should be transparent. Also, it should 
  * inherit the transition.
  */
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
  * Show the placeholder when the input is focused.
  */
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
  * When the element is focused, remove the label transform.
  * Also, do this when the placeholder is _not_ shown, i.e. when 
  * there's something in the input at all.
  */
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}
